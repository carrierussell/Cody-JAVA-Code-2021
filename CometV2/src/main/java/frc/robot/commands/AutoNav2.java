package frc.robot.commands;

//import java.util.Timer;

import edu.wpi.first.wpilibj2.command.CommandBase;
import frc.robot.subsystems.DriveTrain;
import edu.wpi.first.wpilibj.Timer;

public class AutoNav2 extends CommandBase{
private DriveTrain driveTrain;
private double left = 0.0;
private double right = 0.0;
private Timer timer;
    public AutoNav2(DriveTrain subsystem){
        this.driveTrain = subsystem;
        addRequirements(driveTrain);
        
    }

    @Override
    public void initialize() {
        timer = new Timer();
        timer.start();
        
    }

    // Called every time the scheduler runs while the command is scheduled.
    @Override
    public void execute() {
               
        driveTrain.drive(.65, .75);
        timer.delay(0.50);  //off the starting block
        driveTrain.drive(-0.3, 0.80);
        timer.delay(0.75);  //this covers the first turn
        driveTrain.drive(0.80, 0.55);
        timer.delay(3.2);  //this comes out of the turn past the 5 cones
        driveTrain.drive(0.80, 0.0);
        timer.delay(1.25);  //this cuts back in before the last cone
        driveTrain.drive(-0.2, 0.80);
        timer.delay(5.6);   //not working yet - needs to corner the last cone
        //driveTrain.drive(0.55, 0.80);  //this should hit the straight away again
        //timer.delay(3.2);
        //driveTrain.drive(0.80, -0.30);  //this should cut back in before the last cone
        //timer.delay(0.75);
        driveTrain.drive(0.0,0.0);   //this is the final stop
    
        
        

       
             
    }

    // Called once the command ends or is interrupted.
    @Override
    public void end(boolean interrupted) {
    }

    // Returns true when the command should end.
    @Override
    public boolean isFinished() {
         return true;
           }

    @Override
    public boolean runsWhenDisabled() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DISABLED
        return false;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DISABLED
    }

}